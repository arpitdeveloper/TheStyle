/// <reference types="lodash" />
import { ImageSize } from '@flamelink/sdk-storage-types';
export declare const getFileRefPath: (fileID?: string) => string;
export declare const getFolderRefPath: (folderID?: string) => string;
export declare const filterFilesByFolderId: import("lodash").CurriedFunction2<string, any, any>;
export declare const getScreenResolution: () => number;
export declare const getStorageRefPath: (filename: string, { width, path }?: ImageSize) => string;
export declare const setImagePathByClosestSize: (storageRefArgs: any, availableFileSizes: any[], minSize: number) => void;
export declare const getUploadEvents: (storage?: any) => {
    MAIN_FILE_UPLOAD_STATE_CHANGED: string;
    SIZED_FILE_UPLOAD_STATE_CHANGED: string;
    ALL: string;
    START: string;
    SUCCESS: string;
    FAILURE: string;
    DB_PERSIST_STARTED: string;
    DB_PERSIST_FINISHED: string;
    MAIN_FILE_UPLOAD_STARTED: string;
    MAIN_FILE_UPLOAD_FINISHED: string;
    SIZED_FILES_UPLOAD_STARTED: string;
    SIZED_FILES_UPLOAD_FINISHED: string;
    SIZED_FILE_UPLOAD_STARTED: string;
    SIZED_FILE_UPLOAD_FINISHED: string;
    RESIZE_IMAGE_STARTED: string;
    RESIZE_IMAGE_FINISHED: string;
} | {
    ALL: string;
    START: string;
    SUCCESS: string;
    FAILURE: string;
    DB_PERSIST_STARTED: string;
    DB_PERSIST_FINISHED: string;
    MAIN_FILE_UPLOAD_STARTED: string;
    MAIN_FILE_UPLOAD_FINISHED: string;
    SIZED_FILES_UPLOAD_STARTED: string;
    SIZED_FILES_UPLOAD_FINISHED: string;
    SIZED_FILE_UPLOAD_STARTED: string;
    SIZED_FILE_UPLOAD_FINISHED: string;
    RESIZE_IMAGE_STARTED: string;
    RESIZE_IMAGE_FINISHED: string;
};
